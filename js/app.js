// Generated by CoffeeScript 1.6.2
(function() {
  var App,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  App = (function() {
    var LOCATION_URL;

    LOCATION_URL = 'http://54.85.163.238';

    function App() {
      this.onResize = __bind(this.onResize, this);
      this.loadMapLocation = __bind(this.loadMapLocation, this);
      this.setupMap = __bind(this.setupMap, this);
      this.render = __bind(this.render, this);      this.map = null;
    }

    App.prototype.render = function() {
      try {
        Typekit.load();
      } catch (_error) {}
      document.addEventListener("touchstart", function() {
        return null;
      }, true);
      this.setupMap();
      this.loadMapLocation();
      $(window).on("resize", this.onResize);
      this.onResize();
      return mixpanel.track("index:view");
    };

    App.prototype.renderMapMarker = function(name, createdAt) {
      $(".venue-name").html(name);
      $(".created-at").html("Updated " + (moment(createdAt * 1000).fromNow()));
      $(".marker").show();
      $(".created-at").show();
      return $(".label-container").css({
        marginLeft: (-$(".label-container").outerWidth() / 2) + "px"
      });
    };

    App.prototype.setupMap = function() {
      this.map = L.mapbox.map('map', 'fravic.j11ifpci', {
        attributionControl: false,
        zoomControl: false
      });
      this.map.dragging.disable();
      this.map.touchZoom.disable();
      this.map.doubleClickZoom.disable();
      return this.map.scrollWheelZoom.disable();
    };

    App.prototype.loadMapLocation = function() {
      var _this = this;

      return $.getJSON(LOCATION_URL, function(res) {
        if (res.apiError) {
          console.log("API Error:", res.apiError);
          return;
        }
        _this.map.setView([res.lat, res.lng], 13);
        return _this.renderMapMarker(res.name, res.createdAt);
      }).error(function() {
        return console.log("Server Error: Could not load map location");
      });
    };

    App.prototype.onResize = function() {};

    App.prototype.isMobile = function() {
      return /Android|iPhone|iPad|iPod|BlackBerry|Windows Phone/i.test(navigator.userAgent || navigator.vendor || window.opera);
    };

    return App;

  })();

  window.app = new App();

  $(app.render);

}).call(this);
